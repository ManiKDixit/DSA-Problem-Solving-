package DSA;

import java.util.HashSet;

public class DetectLoopInLinkedList {
	
// Creating a ListNode class 
	
	private ListNode head ;
	private class ListNode {
	
		private ListNode next ; 
		private  int  data;
		
		private ListNode(int data)
		{
			this.data = data ;
		}
		
	}
	
	
	//Creating a linked List with a loop
	
	public void createLinkedList()
	{
		ListNode first = new ListNode(5);
		ListNode second = new ListNode(10);
		ListNode third = new ListNode(48);
		ListNode fourth = new ListNode(2);
		ListNode fifth = new ListNode(33);
		
		//Connecting these Nodes 
		head = first;
		first.next = second ;
		second.next = third;
		third.next = fourth;
		fourth.next = fifth ;
		
		//adding the loop to the list 
		
		fifth.next = third ;
		
		
	}
	
	
	public boolean detectLoop(ListNode node)
	{
		
		
		HashSet<ListNode> set = new HashSet<ListNode>();
        
ListNode current = head;
        boolean flag = false ;
        
        if(head == null)
        {
            return false ;
        }
        
        while( current.next != null)
        { 
            if (set.contains(current))
                return true;
            
            else
            {
            set.add(current);
            current = current.next ;
            }
        }
        
        return flag ; 
    
	}
	
	
	public static void main(String[] args) {
		DetectLoopInLinkedList obj = new DetectLoopInLinkedList();
		obj.createLinkedList();
		System.out.println(obj.detectLoop(obj.head));
	}
	

}
